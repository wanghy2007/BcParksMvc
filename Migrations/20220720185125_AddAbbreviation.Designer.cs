// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BcParksMvc.Migrations
{
    [DbContext(typeof(BcParksMvcContext))]
    [Migration("20220720185125_AddAbbreviation")]
    partial class AddAbbreviation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BcParksMvc.Models.Park", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AreaAcres")
                        .HasColumnType("int");

                    b.Property<int>("AreaHa")
                        .HasColumnType("int");

                    b.Property<int>("EstablishedYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Park");
                });

            modelBuilder.Entity("BcParksMvc.Models.ParkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParkType");
                });

            modelBuilder.Entity("ParkParkType", b =>
                {
                    b.Property<int>("ParkTypesId")
                        .HasColumnType("int");

                    b.Property<int>("ParksId")
                        .HasColumnType("int");

                    b.HasKey("ParkTypesId", "ParksId");

                    b.HasIndex("ParksId");

                    b.ToTable("ParkParkType");
                });

            modelBuilder.Entity("ParkParkType", b =>
                {
                    b.HasOne("BcParksMvc.Models.ParkType", null)
                        .WithMany()
                        .HasForeignKey("ParkTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BcParksMvc.Models.Park", null)
                        .WithMany()
                        .HasForeignKey("ParksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
