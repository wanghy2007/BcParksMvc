@model PaginatedList<BcParksMvc.Models.Park>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchByName" value="@ViewData["CurrentSearch"]" />
            <input type="submit" value="Search" class="btn btn-default btn-outline-dark" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]"
                    asp-route-currentSearch="@ViewData["CurrentSearch"]">
                    Park name
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AreaHaSortParam"]"
                    asp-route-currentSearch="@ViewData["CurrentSearch"]">
                    Area (ha)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AreaAcresSortParam"]"
                    asp-route-currentSearch="@ViewData["CurrentSearch"]">
                    Area (acres)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EstablishedYearSortParam"]"
                    asp-route-currentSearch="@ViewData["CurrentSearch"]">
                    Established
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AreaHa)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AreaAcres)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstablishedYear)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentSearch="@ViewData["CurrentSearch"]" asp-route-pageNumber="@(Model.PageNumber - 1)"
    class="btn btn-default btn-outline-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-currentSearch="@ViewData["CurrentSearch"]" asp-route-pageNumber="@(Model.PageNumber + 1)"
    class="btn btn-default btn-outline-dark @nextDisabled">
    Next
</a>